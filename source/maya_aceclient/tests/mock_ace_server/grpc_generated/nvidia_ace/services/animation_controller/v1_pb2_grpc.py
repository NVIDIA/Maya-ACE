# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from nvidia_ace.a2f import v1_pb2 as nvidia__ace_dot_a2f_dot_v1__pb2
from nvidia_ace.animation_data import v1_pb2 as nvidia__ace_dot_animation__data_dot_v1__pb2
from nvidia_ace.animation_id import v1_pb2 as nvidia__ace_dot_animation__id_dot_v1__pb2
from nvidia_ace.services.animation_controller import v1_pb2 as nvidia__ace_dot_services_dot_animation__controller_dot_v1__pb2
from nvidia_ace.status import v1_pb2 as nvidia__ace_dot_status_dot_v1__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in nvidia_ace.services.animation_controller.v1_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class AnimationControllerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RequestAnimationIds = channel.unary_unary(
                '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/RequestAnimationIds',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=nvidia__ace_dot_services_dot_animation__controller_dot_v1__pb2.AnimationIdsOrStatus.FromString,
                _registered_method=True)
        self.PullAnimationDataStream = channel.unary_stream(
                '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/PullAnimationDataStream',
                request_serializer=nvidia__ace_dot_animation__id_dot_v1__pb2.AnimationIds.SerializeToString,
                response_deserializer=nvidia__ace_dot_animation__data_dot_v1__pb2.AnimationDataStream.FromString,
                _registered_method=True)
        self.PushAudioStream = channel.stream_unary(
                '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/PushAudioStream',
                request_serializer=nvidia__ace_dot_a2f_dot_v1__pb2.AudioStream.SerializeToString,
                response_deserializer=nvidia__ace_dot_status_dot_v1__pb2.Status.FromString,
                _registered_method=True)
        self.UpdateAnimationGraphVariable = channel.stream_unary(
                '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/UpdateAnimationGraphVariable',
                request_serializer=nvidia__ace_dot_services_dot_animation__controller_dot_v1__pb2.AnimationGraphRequest.SerializeToString,
                response_deserializer=nvidia__ace_dot_status_dot_v1__pb2.Status.FromString,
                _registered_method=True)


class AnimationControllerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RequestAnimationIds(self, request, context):
        """First request an ID to communicate with the service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullAnimationDataStream(self, request, context):
        """Then start pulling animation data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushAudioStream(self, request_iterator, context):
        """Send audio data as needed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAnimationGraphVariable(self, request_iterator, context):
        """Update animation graph variables as needed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AnimationControllerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RequestAnimationIds': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestAnimationIds,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=nvidia__ace_dot_services_dot_animation__controller_dot_v1__pb2.AnimationIdsOrStatus.SerializeToString,
            ),
            'PullAnimationDataStream': grpc.unary_stream_rpc_method_handler(
                    servicer.PullAnimationDataStream,
                    request_deserializer=nvidia__ace_dot_animation__id_dot_v1__pb2.AnimationIds.FromString,
                    response_serializer=nvidia__ace_dot_animation__data_dot_v1__pb2.AnimationDataStream.SerializeToString,
            ),
            'PushAudioStream': grpc.stream_unary_rpc_method_handler(
                    servicer.PushAudioStream,
                    request_deserializer=nvidia__ace_dot_a2f_dot_v1__pb2.AudioStream.FromString,
                    response_serializer=nvidia__ace_dot_status_dot_v1__pb2.Status.SerializeToString,
            ),
            'UpdateAnimationGraphVariable': grpc.stream_unary_rpc_method_handler(
                    servicer.UpdateAnimationGraphVariable,
                    request_deserializer=nvidia__ace_dot_services_dot_animation__controller_dot_v1__pb2.AnimationGraphRequest.FromString,
                    response_serializer=nvidia__ace_dot_status_dot_v1__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nvidia_ace.services.animation_controller.v1.AnimationControllerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nvidia_ace.services.animation_controller.v1.AnimationControllerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AnimationControllerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RequestAnimationIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/RequestAnimationIds',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            nvidia__ace_dot_services_dot_animation__controller_dot_v1__pb2.AnimationIdsOrStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PullAnimationDataStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/PullAnimationDataStream',
            nvidia__ace_dot_animation__id_dot_v1__pb2.AnimationIds.SerializeToString,
            nvidia__ace_dot_animation__data_dot_v1__pb2.AnimationDataStream.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PushAudioStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/PushAudioStream',
            nvidia__ace_dot_a2f_dot_v1__pb2.AudioStream.SerializeToString,
            nvidia__ace_dot_status_dot_v1__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAnimationGraphVariable(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/nvidia_ace.services.animation_controller.v1.AnimationControllerService/UpdateAnimationGraphVariable',
            nvidia__ace_dot_services_dot_animation__controller_dot_v1__pb2.AnimationGraphRequest.SerializeToString,
            nvidia__ace_dot_status_dot_v1__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
