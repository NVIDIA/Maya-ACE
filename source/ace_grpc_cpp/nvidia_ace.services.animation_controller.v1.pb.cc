// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvidia_ace.services.animation_controller.v1.proto
// Protobuf C++ Version: 5.26.0

#include "nvidia_ace.services.animation_controller.v1.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace nvidia_ace {
namespace services {
namespace animation_controller {
namespace v1 {

inline constexpr AnimationIdsOrStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AnimationIdsOrStatus::AnimationIdsOrStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AnimationIdsOrStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnimationIdsOrStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnimationIdsOrStatusDefaultTypeInternal() {}
  union {
    AnimationIdsOrStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnimationIdsOrStatusDefaultTypeInternal _AnimationIdsOrStatus_default_instance_;

inline constexpr AnimationGraphRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        animation_graph_variable_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        animation_graph_variable_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        animation_ids_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AnimationGraphRequest::AnimationGraphRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AnimationGraphRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnimationGraphRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnimationGraphRequestDefaultTypeInternal() {}
  union {
    AnimationGraphRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnimationGraphRequestDefaultTypeInternal _AnimationGraphRequest_default_instance_;
}  // namespace v1
}  // namespace animation_controller
}  // namespace services
}  // namespace nvidia_ace
static ::_pb::Metadata file_level_metadata_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto = nullptr;
const ::uint32_t
    TableStruct_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, _impl_.animation_ids_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, _impl_.animation_graph_variable_name_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, _impl_.animation_graph_variable_value_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus, _impl_.response_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest)},
        {14, -1, -1, sizeof(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::nvidia_ace::services::animation_controller::v1::_AnimationGraphRequest_default_instance_._instance,
    &::nvidia_ace::services::animation_controller::v1::_AnimationIdsOrStatus_default_instance_._instance,
};
const char descriptor_table_protodef_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n1nvidia_ace.services.animation_controll"
    "er.v1.proto\022+nvidia_ace.services.animati"
    "on_controller.v1\032\036nvidia_ace.controller."
    "v1.proto\032\032nvidia_ace.status.v1.proto\032 nv"
    "idia_ace.animation_id.v1.proto\032\"nvidia_a"
    "ce.animation_data.v1.proto\032\027nvidia_ace.a"
    "2f.v1.proto\032\033google/protobuf/empty.proto"
    "\"\247\001\n\025AnimationGraphRequest\022\?\n\ranimation_"
    "ids\030\001 \001(\0132(.nvidia_ace.animation_id.v1.A"
    "nimationIds\022%\n\035animation_graph_variable_"
    "name\030\002 \001(\t\022&\n\036animation_graph_variable_v"
    "alue\030\003 \001(\t\"\225\001\n\024AnimationIdsOrStatus\022A\n\ra"
    "nimation_ids\030\001 \001(\0132(.nvidia_ace.animatio"
    "n_id.v1.AnimationIdsH\000\022.\n\006status\030\002 \001(\0132\034"
    ".nvidia_ace.status.v1.StatusH\000B\n\n\010respon"
    "se2\350\003\n\032AnimationControllerService\022r\n\023Req"
    "uestAnimationIds\022\026.google.protobuf.Empty"
    "\032A.nvidia_ace.services.animation_control"
    "ler.v1.AnimationIdsOrStatus\"\000\022z\n\027PullAni"
    "mationDataStream\022(.nvidia_ace.animation_"
    "id.v1.AnimationIds\0321.nvidia_ace.animatio"
    "n_data.v1.AnimationDataStream\"\0000\001\022S\n\017Pus"
    "hAudioStream\022\036.nvidia_ace.a2f.v1.AudioSt"
    "ream\032\034.nvidia_ace.status.v1.Status\"\000(\001\022\204"
    "\001\n\034UpdateAnimationGraphVariable\022B.nvidia"
    "_ace.services.animation_controller.v1.An"
    "imationGraphRequest\032\034.nvidia_ace.status."
    "v1.Status\"\000(\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_deps[6] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto,
        &::descriptor_table_nvidia_5face_2eanimation_5fdata_2ev1_2eproto,
        &::descriptor_table_nvidia_5face_2eanimation_5fid_2ev1_2eproto,
        &::descriptor_table_nvidia_5face_2econtroller_2ev1_2eproto,
        &::descriptor_table_nvidia_5face_2estatus_2ev1_2eproto,
};
static ::absl::once_flag descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto = {
    false,
    false,
    1101,
    descriptor_table_protodef_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto,
    "nvidia_ace.services.animation_controller.v1.proto",
    &descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_once,
    descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_deps,
    6,
    2,
    schemas,
    file_default_instances,
    TableStruct_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto::offsets,
    file_level_metadata_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto,
    file_level_enum_descriptors_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto,
    file_level_service_descriptors_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_getter() {
  return &descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto;
}
namespace nvidia_ace {
namespace services {
namespace animation_controller {
namespace v1 {
// ===================================================================

class AnimationGraphRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<AnimationGraphRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_._has_bits_);
};

void AnimationGraphRequest::clear_animation_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.animation_ids_ != nullptr) _impl_.animation_ids_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AnimationGraphRequest::AnimationGraphRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
}
inline PROTOBUF_NDEBUG_INLINE AnimationGraphRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        animation_graph_variable_name_(arena, from.animation_graph_variable_name_),
        animation_graph_variable_value_(arena, from.animation_graph_variable_value_) {}

AnimationGraphRequest::AnimationGraphRequest(
    ::google::protobuf::Arena* arena,
    const AnimationGraphRequest& from)
    : ::google::protobuf::Message(arena) {
  AnimationGraphRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.animation_ids_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::nvidia_ace::animation_id::v1::AnimationIds>(
                              arena, *from._impl_.animation_ids_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
}
inline PROTOBUF_NDEBUG_INLINE AnimationGraphRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        animation_graph_variable_name_(arena),
        animation_graph_variable_value_(arena) {}

inline void AnimationGraphRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.animation_ids_ = {};
}
AnimationGraphRequest::~AnimationGraphRequest() {
  // @@protoc_insertion_point(destructor:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AnimationGraphRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.animation_graph_variable_name_.Destroy();
  _impl_.animation_graph_variable_value_.Destroy();
  delete _impl_.animation_ids_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AnimationGraphRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_._cached_size_),
              false,
          },
          &AnimationGraphRequest::MergeImpl,
          &AnimationGraphRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AnimationGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.animation_graph_variable_name_.ClearToEmpty();
  _impl_.animation_graph_variable_value_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.animation_ids_ != nullptr);
    _impl_.animation_ids_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AnimationGraphRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 133, 2> AnimationGraphRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AnimationGraphRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_.animation_ids_)}},
    // string animation_graph_variable_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_.animation_graph_variable_name_)}},
    // string animation_graph_variable_value = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_.animation_graph_variable_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    {PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_.animation_ids_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string animation_graph_variable_name = 2;
    {PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_.animation_graph_variable_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string animation_graph_variable_value = 3;
    {PROTOBUF_FIELD_OFFSET(AnimationGraphRequest, _impl_.animation_graph_variable_value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nvidia_ace::animation_id::v1::AnimationIds>()},
  }}, {{
    "\101\0\35\36\0\0\0\0"
    "nvidia_ace.services.animation_controller.v1.AnimationGraphRequest"
    "animation_graph_variable_name"
    "animation_graph_variable_value"
  }},
};

::uint8_t* AnimationGraphRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.animation_ids_, _impl_.animation_ids_->GetCachedSize(), target, stream);
  }

  // string animation_graph_variable_name = 2;
  if (!this->_internal_animation_graph_variable_name().empty()) {
    const std::string& _s = this->_internal_animation_graph_variable_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.services.animation_controller.v1.AnimationGraphRequest.animation_graph_variable_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string animation_graph_variable_value = 3;
  if (!this->_internal_animation_graph_variable_value().empty()) {
    const std::string& _s = this->_internal_animation_graph_variable_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.services.animation_controller.v1.AnimationGraphRequest.animation_graph_variable_value");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  return target;
}

::size_t AnimationGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string animation_graph_variable_name = 2;
  if (!this->_internal_animation_graph_variable_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_animation_graph_variable_name());
  }

  // string animation_graph_variable_value = 3;
  if (!this->_internal_animation_graph_variable_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_animation_graph_variable_value());
  }

  // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.animation_ids_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AnimationGraphRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnimationGraphRequest*>(&to_msg);
  auto& from = static_cast<const AnimationGraphRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_animation_graph_variable_name().empty()) {
    _this->_internal_set_animation_graph_variable_name(from._internal_animation_graph_variable_name());
  }
  if (!from._internal_animation_graph_variable_value().empty()) {
    _this->_internal_set_animation_graph_variable_value(from._internal_animation_graph_variable_value());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.animation_ids_ != nullptr);
    if (_this->_impl_.animation_ids_ == nullptr) {
      _this->_impl_.animation_ids_ =
          ::google::protobuf::Message::CopyConstruct<::nvidia_ace::animation_id::v1::AnimationIds>(arena, *from._impl_.animation_ids_);
    } else {
      _this->_impl_.animation_ids_->MergeFrom(*from._impl_.animation_ids_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnimationGraphRequest::CopyFrom(const AnimationGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AnimationGraphRequest::IsInitialized() const {
  return true;
}

void AnimationGraphRequest::InternalSwap(AnimationGraphRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.animation_graph_variable_name_, &other->_impl_.animation_graph_variable_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.animation_graph_variable_value_, &other->_impl_.animation_graph_variable_value_, arena);
  swap(_impl_.animation_ids_, other->_impl_.animation_ids_);
}

::google::protobuf::Metadata AnimationGraphRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto[0]);
}
// ===================================================================

class AnimationIdsOrStatus::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus, _impl_._oneof_case_);
};

void AnimationIdsOrStatus::set_allocated_animation_ids(::nvidia_ace::animation_id::v1::AnimationIds* animation_ids) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response();
  if (animation_ids) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(animation_ids)->GetArena();
    if (message_arena != submessage_arena) {
      animation_ids = ::google::protobuf::internal::GetOwnedMessage(message_arena, animation_ids, submessage_arena);
    }
    set_has_animation_ids();
    _impl_.response_.animation_ids_ = animation_ids;
  }
  // @@protoc_insertion_point(field_set_allocated:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus.animation_ids)
}
void AnimationIdsOrStatus::clear_animation_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (response_case() == kAnimationIds) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.animation_ids_;
    }
    clear_has_response();
  }
}
void AnimationIdsOrStatus::set_allocated_status(::nvidia_ace::status::v1::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response();
  if (status) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(message_arena, status, submessage_arena);
    }
    set_has_status();
    _impl_.response_.status_ = status;
  }
  // @@protoc_insertion_point(field_set_allocated:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus.status)
}
void AnimationIdsOrStatus::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (response_case() == kStatus) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.status_;
    }
    clear_has_response();
  }
}
AnimationIdsOrStatus::AnimationIdsOrStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
}
inline PROTOBUF_NDEBUG_INLINE AnimationIdsOrStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : response_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

AnimationIdsOrStatus::AnimationIdsOrStatus(
    ::google::protobuf::Arena* arena,
    const AnimationIdsOrStatus& from)
    : ::google::protobuf::Message(arena) {
  AnimationIdsOrStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (response_case()) {
    case RESPONSE_NOT_SET:
      break;
      case kAnimationIds:
        _impl_.response_.animation_ids_ = ::google::protobuf::Message::CopyConstruct<::nvidia_ace::animation_id::v1::AnimationIds>(arena, *from._impl_.response_.animation_ids_);
        break;
      case kStatus:
        _impl_.response_.status_ = ::google::protobuf::Message::CopyConstruct<::nvidia_ace::status::v1::Status>(arena, *from._impl_.response_.status_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
}
inline PROTOBUF_NDEBUG_INLINE AnimationIdsOrStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void AnimationIdsOrStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AnimationIdsOrStatus::~AnimationIdsOrStatus() {
  // @@protoc_insertion_point(destructor:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AnimationIdsOrStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_response()) {
    clear_response();
  }
  _impl_.~Impl_();
}

void AnimationIdsOrStatus::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (response_case()) {
    case kAnimationIds: {
      if (GetArena() == nullptr) {
        delete _impl_.response_.animation_ids_;
      }
      break;
    }
    case kStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.response_.status_;
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
AnimationIdsOrStatus::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AnimationIdsOrStatus, _impl_._cached_size_),
              false,
          },
          &AnimationIdsOrStatus::MergeImpl,
          &AnimationIdsOrStatus::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AnimationIdsOrStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AnimationIdsOrStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> AnimationIdsOrStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AnimationIdsOrStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    {PROTOBUF_FIELD_OFFSET(AnimationIdsOrStatus, _impl_.response_.animation_ids_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nvidia_ace.status.v1.Status status = 2;
    {PROTOBUF_FIELD_OFFSET(AnimationIdsOrStatus, _impl_.response_.status_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nvidia_ace::animation_id::v1::AnimationIds>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::status::v1::Status>()},
  }}, {{
  }},
};

::uint8_t* AnimationIdsOrStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (response_case()) {
    case kAnimationIds: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.response_.animation_ids_, _impl_.response_.animation_ids_->GetCachedSize(), target, stream);
      break;
    }
    case kStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.response_.status_, _impl_.response_.status_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  return target;
}

::size_t AnimationIdsOrStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (response_case()) {
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    case kAnimationIds: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_.animation_ids_);
      break;
    }
    // .nvidia_ace.status.v1.Status status = 2;
    case kStatus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_.status_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AnimationIdsOrStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnimationIdsOrStatus*>(&to_msg);
  auto& from = static_cast<const AnimationIdsOrStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_response();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAnimationIds: {
        if (oneof_needs_init) {
          _this->_impl_.response_.animation_ids_ =
              ::google::protobuf::Message::CopyConstruct<::nvidia_ace::animation_id::v1::AnimationIds>(arena, *from._impl_.response_.animation_ids_);
        } else {
          _this->_impl_.response_.animation_ids_->MergeFrom(from._internal_animation_ids());
        }
        break;
      }
      case kStatus: {
        if (oneof_needs_init) {
          _this->_impl_.response_.status_ =
              ::google::protobuf::Message::CopyConstruct<::nvidia_ace::status::v1::Status>(arena, *from._impl_.response_.status_);
        } else {
          _this->_impl_.response_.status_->MergeFrom(from._internal_status());
        }
        break;
      }
      case RESPONSE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnimationIdsOrStatus::CopyFrom(const AnimationIdsOrStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AnimationIdsOrStatus::IsInitialized() const {
  return true;
}

void AnimationIdsOrStatus::InternalSwap(AnimationIdsOrStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.response_, other->_impl_.response_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AnimationIdsOrStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace animation_controller
}  // namespace services
}  // namespace nvidia_ace
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_nvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
