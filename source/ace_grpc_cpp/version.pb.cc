// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: version.proto
// Protobuf C++ Version: 5.26.0

#include "version.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace nvidia_ace {
namespace services {
namespace version {
namespace v1 {

inline constexpr VersionEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : service_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VersionEntry::VersionEntry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VersionEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionEntryDefaultTypeInternal() {}
  union {
    VersionEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionEntryDefaultTypeInternal _VersionEntry_default_instance_;

inline constexpr VersionInformation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : version_information_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VersionInformation::VersionInformation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VersionInformationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionInformationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionInformationDefaultTypeInternal() {}
  union {
    VersionInformation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionInformationDefaultTypeInternal _VersionInformation_default_instance_;
}  // namespace v1
}  // namespace version
}  // namespace services
}  // namespace nvidia_ace
static ::_pb::Metadata file_level_metadata_version_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_version_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_version_2eproto = nullptr;
const ::uint32_t
    TableStruct_version_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::version::v1::VersionInformation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::version::v1::VersionInformation, _impl_.version_information_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::version::v1::VersionEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::version::v1::VersionEntry, _impl_.service_name_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::version::v1::VersionEntry, _impl_.version_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::nvidia_ace::services::version::v1::VersionInformation)},
        {9, -1, -1, sizeof(::nvidia_ace::services::version::v1::VersionEntry)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::nvidia_ace::services::version::v1::_VersionInformation_default_instance_._instance,
    &::nvidia_ace::services::version::v1::_VersionEntry_default_instance_._instance,
};
const char descriptor_table_protodef_version_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rversion.proto\022\036nvidia_ace.services.ver"
    "sion.v1\032\033google/protobuf/empty.proto\"_\n\022"
    "VersionInformation\022I\n\023version_informatio"
    "n\030\001 \003(\0132,.nvidia_ace.services.version.v1"
    ".VersionEntry\"5\n\014VersionEntry\022\024\n\014service"
    "_name\030\001 \001(\t\022\017\n\007version\030\002 \001(\t2\202\001\n\031Version"
    "InformationService\022e\n\025GetVersionInformat"
    "ion\022\026.google.protobuf.Empty\0322.nvidia_ace"
    ".services.version.v1.VersionInformation\""
    "\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_version_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_version_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_version_2eproto = {
    false,
    false,
    369,
    descriptor_table_protodef_version_2eproto,
    "version.proto",
    &descriptor_table_version_2eproto_once,
    descriptor_table_version_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_version_2eproto::offsets,
    file_level_metadata_version_2eproto,
    file_level_enum_descriptors_version_2eproto,
    file_level_service_descriptors_version_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_version_2eproto_getter() {
  return &descriptor_table_version_2eproto;
}
namespace nvidia_ace {
namespace services {
namespace version {
namespace v1 {
// ===================================================================

class VersionInformation::_Internal {
 public:
};

VersionInformation::VersionInformation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.services.version.v1.VersionInformation)
}
inline PROTOBUF_NDEBUG_INLINE VersionInformation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : version_information_{visibility, arena, from.version_information_},
        _cached_size_{0} {}

VersionInformation::VersionInformation(
    ::google::protobuf::Arena* arena,
    const VersionInformation& from)
    : ::google::protobuf::Message(arena) {
  VersionInformation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.services.version.v1.VersionInformation)
}
inline PROTOBUF_NDEBUG_INLINE VersionInformation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : version_information_{visibility, arena},
        _cached_size_{0} {}

inline void VersionInformation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VersionInformation::~VersionInformation() {
  // @@protoc_insertion_point(destructor:nvidia_ace.services.version.v1.VersionInformation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VersionInformation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VersionInformation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VersionInformation, _impl_._cached_size_),
              false,
          },
          &VersionInformation::MergeImpl,
          &VersionInformation::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VersionInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.services.version.v1.VersionInformation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_information_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VersionInformation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VersionInformation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VersionInformation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::services::version::v1::VersionInformation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .nvidia_ace.services.version.v1.VersionEntry version_information = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VersionInformation, _impl_.version_information_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .nvidia_ace.services.version.v1.VersionEntry version_information = 1;
    {PROTOBUF_FIELD_OFFSET(VersionInformation, _impl_.version_information_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nvidia_ace::services::version::v1::VersionEntry>()},
  }}, {{
  }},
};

::uint8_t* VersionInformation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.services.version.v1.VersionInformation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .nvidia_ace.services.version.v1.VersionEntry version_information = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_version_information_size());
       i < n; i++) {
    const auto& repfield = this->_internal_version_information().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.services.version.v1.VersionInformation)
  return target;
}

::size_t VersionInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.services.version.v1.VersionInformation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nvidia_ace.services.version.v1.VersionEntry version_information = 1;
  total_size += 1UL * this->_internal_version_information_size();
  for (const auto& msg : this->_internal_version_information()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VersionInformation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VersionInformation*>(&to_msg);
  auto& from = static_cast<const VersionInformation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.services.version.v1.VersionInformation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_version_information()->MergeFrom(
      from._internal_version_information());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VersionInformation::CopyFrom(const VersionInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.services.version.v1.VersionInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VersionInformation::IsInitialized() const {
  return true;
}

void VersionInformation::InternalSwap(VersionInformation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.version_information_.InternalSwap(&other->_impl_.version_information_);
}

::google::protobuf::Metadata VersionInformation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_version_2eproto_getter,
                                   &descriptor_table_version_2eproto_once,
                                   file_level_metadata_version_2eproto[0]);
}
// ===================================================================

class VersionEntry::_Internal {
 public:
};

VersionEntry::VersionEntry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.services.version.v1.VersionEntry)
}
inline PROTOBUF_NDEBUG_INLINE VersionEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : service_name_(arena, from.service_name_),
        version_(arena, from.version_),
        _cached_size_{0} {}

VersionEntry::VersionEntry(
    ::google::protobuf::Arena* arena,
    const VersionEntry& from)
    : ::google::protobuf::Message(arena) {
  VersionEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.services.version.v1.VersionEntry)
}
inline PROTOBUF_NDEBUG_INLINE VersionEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : service_name_(arena),
        version_(arena),
        _cached_size_{0} {}

inline void VersionEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VersionEntry::~VersionEntry() {
  // @@protoc_insertion_point(destructor:nvidia_ace.services.version.v1.VersionEntry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VersionEntry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.version_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VersionEntry::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VersionEntry, _impl_._cached_size_),
              false,
          },
          &VersionEntry::MergeImpl,
          &VersionEntry::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VersionEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.services.version.v1.VersionEntry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VersionEntry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> VersionEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VersionEntry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::services::version::v1::VersionEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VersionEntry, _impl_.version_)}},
    // string service_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VersionEntry, _impl_.service_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string service_name = 1;
    {PROTOBUF_FIELD_OFFSET(VersionEntry, _impl_.service_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(VersionEntry, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\14\7\0\0\0\0\0"
    "nvidia_ace.services.version.v1.VersionEntry"
    "service_name"
    "version"
  }},
};

::uint8_t* VersionEntry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.services.version.v1.VersionEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    const std::string& _s = this->_internal_service_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.services.version.v1.VersionEntry.service_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.services.version.v1.VersionEntry.version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.services.version.v1.VersionEntry)
  return target;
}

::size_t VersionEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.services.version.v1.VersionEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_service_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VersionEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VersionEntry*>(&to_msg);
  auto& from = static_cast<const VersionEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.services.version.v1.VersionEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VersionEntry::CopyFrom(const VersionEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.services.version.v1.VersionEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VersionEntry::IsInitialized() const {
  return true;
}

void VersionEntry::InternalSwap(VersionEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_name_, &other->_impl_.service_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
}

::google::protobuf::Metadata VersionEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_version_2eproto_getter,
                                   &descriptor_table_version_2eproto_once,
                                   file_level_metadata_version_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace version
}  // namespace services
}  // namespace nvidia_ace
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_version_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
