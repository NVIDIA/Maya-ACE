// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvidia_ace.a2f.v1.proto
// Protobuf C++ Version: 5.26.0

#include "nvidia_ace.a2f.v1.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace nvidia_ace {
namespace a2f {
namespace v1 {

inline constexpr FloatArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FloatArray::FloatArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FloatArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatArrayDefaultTypeInternal() {}
  union {
    FloatArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatArrayDefaultTypeInternal _FloatArray_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FaceParameters_IntegerParamsEntry_DoNotUse::FaceParameters_IntegerParamsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct FaceParameters_IntegerParamsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FaceParameters_IntegerParamsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FaceParameters_IntegerParamsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FaceParameters_IntegerParamsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FaceParameters_IntegerParamsEntry_DoNotUseDefaultTypeInternal _FaceParameters_IntegerParamsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FaceParameters_FloatParamsEntry_DoNotUse::FaceParameters_FloatParamsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct FaceParameters_FloatParamsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FaceParameters_FloatParamsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FaceParameters_FloatParamsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FaceParameters_FloatParamsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FaceParameters_FloatParamsEntry_DoNotUseDefaultTypeInternal _FaceParameters_FloatParamsEntry_DoNotUse_default_instance_;

inline constexpr EmotionPostProcessingParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        emotion_contrast_{0},
        live_blend_coef_{0},
        enable_preferred_emotion_{false},
        preferred_emotion_strength_{0},
        emotion_strength_{0},
        max_emotions_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmotionPostProcessingParameters::EmotionPostProcessingParameters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmotionPostProcessingParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmotionPostProcessingParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmotionPostProcessingParametersDefaultTypeInternal() {}
  union {
    EmotionPostProcessingParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmotionPostProcessingParametersDefaultTypeInternal _EmotionPostProcessingParameters_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct BlendShapeParameters_BsWeightOffsetsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlendShapeParameters_BsWeightOffsetsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlendShapeParameters_BsWeightOffsetsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlendShapeParameters_BsWeightOffsetsEntry_DoNotUseDefaultTypeInternal _BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct BlendShapeParameters_BsWeightMultipliersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlendShapeParameters_BsWeightMultipliersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlendShapeParameters_BsWeightMultipliersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlendShapeParameters_BsWeightMultipliersEntry_DoNotUseDefaultTypeInternal _BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FaceParameters_FloatArrayParamsEntry_DoNotUse::FaceParameters_FloatArrayParamsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct FaceParameters_FloatArrayParamsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FaceParameters_FloatArrayParamsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FaceParameters_FloatArrayParamsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FaceParameters_FloatArrayParamsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FaceParameters_FloatArrayParamsEntry_DoNotUseDefaultTypeInternal _FaceParameters_FloatArrayParamsEntry_DoNotUse_default_instance_;

inline constexpr BlendShapeParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bs_weight_multipliers_{},
        bs_weight_offsets_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlendShapeParameters::BlendShapeParameters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlendShapeParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlendShapeParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlendShapeParametersDefaultTypeInternal() {}
  union {
    BlendShapeParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlendShapeParametersDefaultTypeInternal _BlendShapeParameters_default_instance_;

inline constexpr FaceParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : float_params_{},
        integer_params_{},
        float_array_params_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FaceParameters::FaceParameters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FaceParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FaceParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FaceParametersDefaultTypeInternal() {}
  union {
    FaceParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FaceParametersDefaultTypeInternal _FaceParameters_default_instance_;

inline constexpr AudioWithEmotion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : emotions_{},
        audio_buffer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AudioWithEmotion::AudioWithEmotion(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioWithEmotionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioWithEmotionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioWithEmotionDefaultTypeInternal() {}
  union {
    AudioWithEmotion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioWithEmotionDefaultTypeInternal _AudioWithEmotion_default_instance_;

inline constexpr AudioStreamHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        animation_ids_{nullptr},
        audio_header_{nullptr},
        face_params_{nullptr},
        emotion_post_processing_params_{nullptr},
        blendshape_params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AudioStreamHeader::AudioStreamHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioStreamHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioStreamHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioStreamHeaderDefaultTypeInternal() {}
  union {
    AudioStreamHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioStreamHeaderDefaultTypeInternal _AudioStreamHeader_default_instance_;

inline constexpr AudioStream::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stream_part_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AudioStream::AudioStream(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioStreamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioStreamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioStreamDefaultTypeInternal() {}
  union {
    AudioStream _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioStreamDefaultTypeInternal _AudioStream_default_instance_;
}  // namespace v1
}  // namespace a2f
}  // namespace nvidia_ace
static ::_pb::Metadata file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_nvidia_5face_2ea2f_2ev1_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_nvidia_5face_2ea2f_2ev1_2eproto = nullptr;
const ::uint32_t
    TableStruct_nvidia_5face_2ea2f_2ev1_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStream, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStream, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStream, _impl_.stream_part_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStreamHeader, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStreamHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStreamHeader, _impl_.animation_ids_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStreamHeader, _impl_.audio_header_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStreamHeader, _impl_.face_params_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStreamHeader, _impl_.emotion_post_processing_params_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStreamHeader, _impl_.blendshape_params_),
        0,
        1,
        2,
        3,
        4,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FloatArray, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FloatArray, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatParamsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatParamsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatParamsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatParamsEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_IntegerParamsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_IntegerParamsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_IntegerParamsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_IntegerParamsEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatArrayParamsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatArrayParamsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatArrayParamsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters_FloatArrayParamsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters, _impl_.float_params_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters, _impl_.integer_params_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::FaceParameters, _impl_.float_array_params_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters, _impl_.bs_weight_multipliers_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::BlendShapeParameters, _impl_.bs_weight_offsets_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _impl_.emotion_contrast_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _impl_.live_blend_coef_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _impl_.enable_preferred_emotion_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _impl_.preferred_emotion_strength_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _impl_.emotion_strength_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters, _impl_.max_emotions_),
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioWithEmotion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioWithEmotion, _impl_.audio_buffer_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioWithEmotion, _impl_.emotions_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::nvidia_ace::a2f::v1::AudioStream)},
        {11, 24, -1, sizeof(::nvidia_ace::a2f::v1::AudioStreamHeader)},
        {29, -1, -1, sizeof(::nvidia_ace::a2f::v1::FloatArray)},
        {38, 48, -1, sizeof(::nvidia_ace::a2f::v1::FaceParameters_FloatParamsEntry_DoNotUse)},
        {50, 60, -1, sizeof(::nvidia_ace::a2f::v1::FaceParameters_IntegerParamsEntry_DoNotUse)},
        {62, 72, -1, sizeof(::nvidia_ace::a2f::v1::FaceParameters_FloatArrayParamsEntry_DoNotUse)},
        {74, -1, -1, sizeof(::nvidia_ace::a2f::v1::FaceParameters)},
        {85, 95, -1, sizeof(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse)},
        {97, 107, -1, sizeof(::nvidia_ace::a2f::v1::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse)},
        {109, -1, -1, sizeof(::nvidia_ace::a2f::v1::BlendShapeParameters)},
        {119, 133, -1, sizeof(::nvidia_ace::a2f::v1::EmotionPostProcessingParameters)},
        {139, -1, -1, sizeof(::nvidia_ace::a2f::v1::AudioWithEmotion)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::nvidia_ace::a2f::v1::_AudioStream_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_AudioStreamHeader_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_FloatArray_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_FaceParameters_FloatParamsEntry_DoNotUse_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_FaceParameters_IntegerParamsEntry_DoNotUse_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_FaceParameters_FloatArrayParamsEntry_DoNotUse_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_FaceParameters_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_BlendShapeParameters_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_EmotionPostProcessingParameters_default_instance_._instance,
    &::nvidia_ace::a2f::v1::_AudioWithEmotion_default_instance_._instance,
};
const char descriptor_table_protodef_nvidia_5face_2ea2f_2ev1_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027nvidia_ace.a2f.v1.proto\022\021nvidia_ace.a2"
    "f.v1\032 nvidia_ace.animation_id.v1.proto\032\032"
    "nvidia_ace.status.v1.proto\032\031nvidia_ace.a"
    "udio.v1.proto\032)nvidia_ace.emotion_with_t"
    "imecode.v1.proto\"\244\001\n\013AudioStream\022C\n\023audi"
    "o_stream_header\030\001 \001(\0132$.nvidia_ace.a2f.v"
    "1.AudioStreamHeaderH\000\022A\n\022audio_with_emot"
    "ion\030\002 \001(\0132#.nvidia_ace.a2f.v1.AudioWithE"
    "motionH\000B\r\n\013stream_part\"\344\002\n\021AudioStreamH"
    "eader\022\?\n\ranimation_ids\030\001 \001(\0132(.nvidia_ac"
    "e.animation_id.v1.AnimationIds\0226\n\014audio_"
    "header\030\002 \001(\0132 .nvidia_ace.audio.v1.Audio"
    "Header\0226\n\013face_params\030\003 \001(\0132!.nvidia_ace"
    ".a2f.v1.FaceParameters\022Z\n\036emotion_post_p"
    "rocessing_params\030\004 \001(\01322.nvidia_ace.a2f."
    "v1.EmotionPostProcessingParameters\022B\n\021bl"
    "endshape_params\030\005 \001(\0132\'.nvidia_ace.a2f.v"
    "1.BlendShapeParameters\"\034\n\nFloatArray\022\016\n\006"
    "values\030\001 \003(\002\"\277\003\n\016FaceParameters\022H\n\014float"
    "_params\030\001 \003(\01322.nvidia_ace.a2f.v1.FacePa"
    "rameters.FloatParamsEntry\022L\n\016integer_par"
    "ams\030\002 \003(\01324.nvidia_ace.a2f.v1.FaceParame"
    "ters.IntegerParamsEntry\022S\n\022float_array_p"
    "arams\030\003 \003(\01327.nvidia_ace.a2f.v1.FacePara"
    "meters.FloatArrayParamsEntry\0322\n\020FloatPar"
    "amsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001"
    "\0324\n\022IntegerParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\005:\0028\001\032V\n\025FloatArrayParamsEntry\022"
    "\013\n\003key\030\001 \001(\t\022,\n\005value\030\002 \001(\0132\035.nvidia_ace"
    ".a2f.v1.FloatArray:\0028\001\"\304\002\n\024BlendShapePar"
    "ameters\022_\n\025bs_weight_multipliers\030\001 \003(\0132@"
    ".nvidia_ace.a2f.v1.BlendShapeParameters."
    "BsWeightMultipliersEntry\022W\n\021bs_weight_of"
    "fsets\030\002 \003(\0132<.nvidia_ace.a2f.v1.BlendSha"
    "peParameters.BsWeightOffsetsEntry\032:\n\030BsW"
    "eightMultipliersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\002:\0028\001\0326\n\024BsWeightOffsetsEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001\"\363\002\n\037Emotio"
    "nPostProcessingParameters\022\035\n\020emotion_con"
    "trast\030\001 \001(\002H\000\210\001\001\022\034\n\017live_blend_coef\030\002 \001("
    "\002H\001\210\001\001\022%\n\030enable_preferred_emotion\030\003 \001(\010"
    "H\002\210\001\001\022\'\n\032preferred_emotion_strength\030\004 \001("
    "\002H\003\210\001\001\022\035\n\020emotion_strength\030\005 \001(\002H\004\210\001\001\022\031\n"
    "\014max_emotions\030\006 \001(\005H\005\210\001\001B\023\n\021_emotion_con"
    "trastB\022\n\020_live_blend_coefB\033\n\031_enable_pre"
    "ferred_emotionB\035\n\033_preferred_emotion_str"
    "engthB\023\n\021_emotion_strengthB\017\n\r_max_emoti"
    "ons\"t\n\020AudioWithEmotion\022\024\n\014audio_buffer\030"
    "\001 \001(\014\022J\n\010emotions\030\002 \003(\01328.nvidia_ace.emo"
    "tion_with_timecode.v1.EmotionWithTimeCod"
    "eb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_deps[4] =
    {
        &::descriptor_table_nvidia_5face_2eanimation_5fid_2ev1_2eproto,
        &::descriptor_table_nvidia_5face_2eaudio_2ev1_2eproto,
        &::descriptor_table_nvidia_5face_2eemotion_5fwith_5ftimecode_2ev1_2eproto,
        &::descriptor_table_nvidia_5face_2estatus_2ev1_2eproto,
};
static ::absl::once_flag descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto = {
    false,
    false,
    2009,
    descriptor_table_protodef_nvidia_5face_2ea2f_2ev1_2eproto,
    "nvidia_ace.a2f.v1.proto",
    &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
    descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_deps,
    4,
    12,
    schemas,
    file_default_instances,
    TableStruct_nvidia_5face_2ea2f_2ev1_2eproto::offsets,
    file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto,
    file_level_enum_descriptors_nvidia_5face_2ea2f_2ev1_2eproto,
    file_level_service_descriptors_nvidia_5face_2ea2f_2ev1_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter() {
  return &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto;
}
namespace nvidia_ace {
namespace a2f {
namespace v1 {
// ===================================================================

class AudioStream::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::nvidia_ace::a2f::v1::AudioStream, _impl_._oneof_case_);
};

void AudioStream::set_allocated_audio_stream_header(::nvidia_ace::a2f::v1::AudioStreamHeader* audio_stream_header) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_stream_part();
  if (audio_stream_header) {
    ::google::protobuf::Arena* submessage_arena = audio_stream_header->GetArena();
    if (message_arena != submessage_arena) {
      audio_stream_header = ::google::protobuf::internal::GetOwnedMessage(message_arena, audio_stream_header, submessage_arena);
    }
    set_has_audio_stream_header();
    _impl_.stream_part_.audio_stream_header_ = audio_stream_header;
  }
  // @@protoc_insertion_point(field_set_allocated:nvidia_ace.a2f.v1.AudioStream.audio_stream_header)
}
void AudioStream::set_allocated_audio_with_emotion(::nvidia_ace::a2f::v1::AudioWithEmotion* audio_with_emotion) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_stream_part();
  if (audio_with_emotion) {
    ::google::protobuf::Arena* submessage_arena = audio_with_emotion->GetArena();
    if (message_arena != submessage_arena) {
      audio_with_emotion = ::google::protobuf::internal::GetOwnedMessage(message_arena, audio_with_emotion, submessage_arena);
    }
    set_has_audio_with_emotion();
    _impl_.stream_part_.audio_with_emotion_ = audio_with_emotion;
  }
  // @@protoc_insertion_point(field_set_allocated:nvidia_ace.a2f.v1.AudioStream.audio_with_emotion)
}
AudioStream::AudioStream(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.a2f.v1.AudioStream)
}
inline PROTOBUF_NDEBUG_INLINE AudioStream::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : stream_part_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

AudioStream::AudioStream(
    ::google::protobuf::Arena* arena,
    const AudioStream& from)
    : ::google::protobuf::Message(arena) {
  AudioStream* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (stream_part_case()) {
    case STREAM_PART_NOT_SET:
      break;
      case kAudioStreamHeader:
        _impl_.stream_part_.audio_stream_header_ = ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::AudioStreamHeader>(arena, *from._impl_.stream_part_.audio_stream_header_);
        break;
      case kAudioWithEmotion:
        _impl_.stream_part_.audio_with_emotion_ = ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::AudioWithEmotion>(arena, *from._impl_.stream_part_.audio_with_emotion_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.a2f.v1.AudioStream)
}
inline PROTOBUF_NDEBUG_INLINE AudioStream::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stream_part_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void AudioStream::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AudioStream::~AudioStream() {
  // @@protoc_insertion_point(destructor:nvidia_ace.a2f.v1.AudioStream)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioStream::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_stream_part()) {
    clear_stream_part();
  }
  _impl_.~Impl_();
}

void AudioStream::clear_stream_part() {
// @@protoc_insertion_point(one_of_clear_start:nvidia_ace.a2f.v1.AudioStream)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (stream_part_case()) {
    case kAudioStreamHeader: {
      if (GetArena() == nullptr) {
        delete _impl_.stream_part_.audio_stream_header_;
      }
      break;
    }
    case kAudioWithEmotion: {
      if (GetArena() == nullptr) {
        delete _impl_.stream_part_.audio_with_emotion_;
      }
      break;
    }
    case STREAM_PART_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = STREAM_PART_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
AudioStream::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AudioStream, _impl_._cached_size_),
              false,
          },
          &AudioStream::MergeImpl,
          &AudioStream::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AudioStream::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.a2f.v1.AudioStream)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_stream_part();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioStream::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> AudioStream::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AudioStream_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::AudioStream>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .nvidia_ace.a2f.v1.AudioStreamHeader audio_stream_header = 1;
    {PROTOBUF_FIELD_OFFSET(AudioStream, _impl_.stream_part_.audio_stream_header_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nvidia_ace.a2f.v1.AudioWithEmotion audio_with_emotion = 2;
    {PROTOBUF_FIELD_OFFSET(AudioStream, _impl_.stream_part_.audio_with_emotion_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::AudioStreamHeader>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::AudioWithEmotion>()},
  }}, {{
  }},
};

::uint8_t* AudioStream::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.a2f.v1.AudioStream)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (stream_part_case()) {
    case kAudioStreamHeader: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.stream_part_.audio_stream_header_, _impl_.stream_part_.audio_stream_header_->GetCachedSize(), target, stream);
      break;
    }
    case kAudioWithEmotion: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.stream_part_.audio_with_emotion_, _impl_.stream_part_.audio_with_emotion_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.a2f.v1.AudioStream)
  return target;
}

::size_t AudioStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.a2f.v1.AudioStream)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (stream_part_case()) {
    // .nvidia_ace.a2f.v1.AudioStreamHeader audio_stream_header = 1;
    case kAudioStreamHeader: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.stream_part_.audio_stream_header_);
      break;
    }
    // .nvidia_ace.a2f.v1.AudioWithEmotion audio_with_emotion = 2;
    case kAudioWithEmotion: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.stream_part_.audio_with_emotion_);
      break;
    }
    case STREAM_PART_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AudioStream::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioStream*>(&to_msg);
  auto& from = static_cast<const AudioStream&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.a2f.v1.AudioStream)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_stream_part();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAudioStreamHeader: {
        if (oneof_needs_init) {
          _this->_impl_.stream_part_.audio_stream_header_ =
              ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::AudioStreamHeader>(arena, *from._impl_.stream_part_.audio_stream_header_);
        } else {
          _this->_impl_.stream_part_.audio_stream_header_->MergeFrom(from._internal_audio_stream_header());
        }
        break;
      }
      case kAudioWithEmotion: {
        if (oneof_needs_init) {
          _this->_impl_.stream_part_.audio_with_emotion_ =
              ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::AudioWithEmotion>(arena, *from._impl_.stream_part_.audio_with_emotion_);
        } else {
          _this->_impl_.stream_part_.audio_with_emotion_->MergeFrom(from._internal_audio_with_emotion());
        }
        break;
      }
      case STREAM_PART_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioStream::CopyFrom(const AudioStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.a2f.v1.AudioStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioStream::IsInitialized() const {
  return true;
}

void AudioStream::InternalSwap(AudioStream* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stream_part_, other->_impl_.stream_part_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AudioStream::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[0]);
}
// ===================================================================

class AudioStreamHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<AudioStreamHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_._has_bits_);
};

void AudioStreamHeader::clear_animation_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.animation_ids_ != nullptr) _impl_.animation_ids_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AudioStreamHeader::clear_audio_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.audio_header_ != nullptr) _impl_.audio_header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AudioStreamHeader::AudioStreamHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.a2f.v1.AudioStreamHeader)
}
inline PROTOBUF_NDEBUG_INLINE AudioStreamHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AudioStreamHeader::AudioStreamHeader(
    ::google::protobuf::Arena* arena,
    const AudioStreamHeader& from)
    : ::google::protobuf::Message(arena) {
  AudioStreamHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.animation_ids_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::nvidia_ace::animation_id::v1::AnimationIds>(
                              arena, *from._impl_.animation_ids_)
                        : nullptr;
  _impl_.audio_header_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::nvidia_ace::audio::v1::AudioHeader>(
                              arena, *from._impl_.audio_header_)
                        : nullptr;
  _impl_.face_params_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::FaceParameters>(
                              arena, *from._impl_.face_params_)
                        : nullptr;
  _impl_.emotion_post_processing_params_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::EmotionPostProcessingParameters>(
                              arena, *from._impl_.emotion_post_processing_params_)
                        : nullptr;
  _impl_.blendshape_params_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::BlendShapeParameters>(
                              arena, *from._impl_.blendshape_params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.a2f.v1.AudioStreamHeader)
}
inline PROTOBUF_NDEBUG_INLINE AudioStreamHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AudioStreamHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, animation_ids_),
           0,
           offsetof(Impl_, blendshape_params_) -
               offsetof(Impl_, animation_ids_) +
               sizeof(Impl_::blendshape_params_));
}
AudioStreamHeader::~AudioStreamHeader() {
  // @@protoc_insertion_point(destructor:nvidia_ace.a2f.v1.AudioStreamHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioStreamHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.animation_ids_;
  delete _impl_.audio_header_;
  delete _impl_.face_params_;
  delete _impl_.emotion_post_processing_params_;
  delete _impl_.blendshape_params_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AudioStreamHeader::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_._cached_size_),
              false,
          },
          &AudioStreamHeader::MergeImpl,
          &AudioStreamHeader::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AudioStreamHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.a2f.v1.AudioStreamHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.animation_ids_ != nullptr);
      _impl_.animation_ids_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.audio_header_ != nullptr);
      _impl_.audio_header_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.face_params_ != nullptr);
      _impl_.face_params_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.emotion_post_processing_params_ != nullptr);
      _impl_.emotion_post_processing_params_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.blendshape_params_ != nullptr);
      _impl_.blendshape_params_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioStreamHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> AudioStreamHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AudioStreamHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::AudioStreamHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.animation_ids_)}},
    // .nvidia_ace.audio.v1.AudioHeader audio_header = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.audio_header_)}},
    // .nvidia_ace.a2f.v1.FaceParameters face_params = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.face_params_)}},
    // .nvidia_ace.a2f.v1.EmotionPostProcessingParameters emotion_post_processing_params = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.emotion_post_processing_params_)}},
    // .nvidia_ace.a2f.v1.BlendShapeParameters blendshape_params = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.blendshape_params_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    {PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.animation_ids_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nvidia_ace.audio.v1.AudioHeader audio_header = 2;
    {PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.audio_header_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nvidia_ace.a2f.v1.FaceParameters face_params = 3;
    {PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.face_params_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nvidia_ace.a2f.v1.EmotionPostProcessingParameters emotion_post_processing_params = 4;
    {PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.emotion_post_processing_params_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .nvidia_ace.a2f.v1.BlendShapeParameters blendshape_params = 5;
    {PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.blendshape_params_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nvidia_ace::animation_id::v1::AnimationIds>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::audio::v1::AudioHeader>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::FaceParameters>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::EmotionPostProcessingParameters>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::BlendShapeParameters>()},
  }}, {{
  }},
};

::uint8_t* AudioStreamHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.a2f.v1.AudioStreamHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.animation_ids_, _impl_.animation_ids_->GetCachedSize(), target, stream);
  }

  // .nvidia_ace.audio.v1.AudioHeader audio_header = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.audio_header_, _impl_.audio_header_->GetCachedSize(), target, stream);
  }

  // .nvidia_ace.a2f.v1.FaceParameters face_params = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.face_params_, _impl_.face_params_->GetCachedSize(), target, stream);
  }

  // .nvidia_ace.a2f.v1.EmotionPostProcessingParameters emotion_post_processing_params = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.emotion_post_processing_params_, _impl_.emotion_post_processing_params_->GetCachedSize(), target, stream);
  }

  // .nvidia_ace.a2f.v1.BlendShapeParameters blendshape_params = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.blendshape_params_, _impl_.blendshape_params_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.a2f.v1.AudioStreamHeader)
  return target;
}

::size_t AudioStreamHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.a2f.v1.AudioStreamHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.animation_ids_);
    }

    // .nvidia_ace.audio.v1.AudioHeader audio_header = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.audio_header_);
    }

    // .nvidia_ace.a2f.v1.FaceParameters face_params = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.face_params_);
    }

    // .nvidia_ace.a2f.v1.EmotionPostProcessingParameters emotion_post_processing_params = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.emotion_post_processing_params_);
    }

    // .nvidia_ace.a2f.v1.BlendShapeParameters blendshape_params = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.blendshape_params_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AudioStreamHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioStreamHeader*>(&to_msg);
  auto& from = static_cast<const AudioStreamHeader&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.a2f.v1.AudioStreamHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.animation_ids_ != nullptr);
      if (_this->_impl_.animation_ids_ == nullptr) {
        _this->_impl_.animation_ids_ =
            ::google::protobuf::Message::CopyConstruct<::nvidia_ace::animation_id::v1::AnimationIds>(arena, *from._impl_.animation_ids_);
      } else {
        _this->_impl_.animation_ids_->MergeFrom(*from._impl_.animation_ids_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.audio_header_ != nullptr);
      if (_this->_impl_.audio_header_ == nullptr) {
        _this->_impl_.audio_header_ =
            ::google::protobuf::Message::CopyConstruct<::nvidia_ace::audio::v1::AudioHeader>(arena, *from._impl_.audio_header_);
      } else {
        _this->_impl_.audio_header_->MergeFrom(*from._impl_.audio_header_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.face_params_ != nullptr);
      if (_this->_impl_.face_params_ == nullptr) {
        _this->_impl_.face_params_ =
            ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::FaceParameters>(arena, *from._impl_.face_params_);
      } else {
        _this->_impl_.face_params_->MergeFrom(*from._impl_.face_params_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.emotion_post_processing_params_ != nullptr);
      if (_this->_impl_.emotion_post_processing_params_ == nullptr) {
        _this->_impl_.emotion_post_processing_params_ =
            ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::EmotionPostProcessingParameters>(arena, *from._impl_.emotion_post_processing_params_);
      } else {
        _this->_impl_.emotion_post_processing_params_->MergeFrom(*from._impl_.emotion_post_processing_params_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.blendshape_params_ != nullptr);
      if (_this->_impl_.blendshape_params_ == nullptr) {
        _this->_impl_.blendshape_params_ =
            ::google::protobuf::Message::CopyConstruct<::nvidia_ace::a2f::v1::BlendShapeParameters>(arena, *from._impl_.blendshape_params_);
      } else {
        _this->_impl_.blendshape_params_->MergeFrom(*from._impl_.blendshape_params_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioStreamHeader::CopyFrom(const AudioStreamHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.a2f.v1.AudioStreamHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioStreamHeader::IsInitialized() const {
  return true;
}

void AudioStreamHeader::InternalSwap(AudioStreamHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.blendshape_params_)
      + sizeof(AudioStreamHeader::_impl_.blendshape_params_)
      - PROTOBUF_FIELD_OFFSET(AudioStreamHeader, _impl_.animation_ids_)>(
          reinterpret_cast<char*>(&_impl_.animation_ids_),
          reinterpret_cast<char*>(&other->_impl_.animation_ids_));
}

::google::protobuf::Metadata AudioStreamHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[1]);
}
// ===================================================================

class FloatArray::_Internal {
 public:
};

FloatArray::FloatArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.a2f.v1.FloatArray)
}
inline PROTOBUF_NDEBUG_INLINE FloatArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

FloatArray::FloatArray(
    ::google::protobuf::Arena* arena,
    const FloatArray& from)
    : ::google::protobuf::Message(arena) {
  FloatArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.a2f.v1.FloatArray)
}
inline PROTOBUF_NDEBUG_INLINE FloatArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void FloatArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FloatArray::~FloatArray() {
  // @@protoc_insertion_point(destructor:nvidia_ace.a2f.v1.FloatArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FloatArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FloatArray::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FloatArray, _impl_._cached_size_),
              false,
          },
          &FloatArray::MergeImpl,
          &FloatArray::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FloatArray::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.a2f.v1.FloatArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FloatArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FloatArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FloatArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::FloatArray>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float values = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FloatArray, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float values = 1;
    {PROTOBUF_FIELD_OFFSET(FloatArray, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FloatArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.a2f.v1.FloatArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.a2f.v1.FloatArray)
  return target;
}

::size_t FloatArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.a2f.v1.FloatArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float values = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FloatArray::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FloatArray*>(&to_msg);
  auto& from = static_cast<const FloatArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.a2f.v1.FloatArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FloatArray::CopyFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.a2f.v1.FloatArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FloatArray::IsInitialized() const {
  return true;
}

void FloatArray::InternalSwap(FloatArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata FloatArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[2]);
}
// ===================================================================

FaceParameters_FloatParamsEntry_DoNotUse::FaceParameters_FloatParamsEntry_DoNotUse() {}
FaceParameters_FloatParamsEntry_DoNotUse::FaceParameters_FloatParamsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata FaceParameters_FloatParamsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[3]);
}
// ===================================================================

FaceParameters_IntegerParamsEntry_DoNotUse::FaceParameters_IntegerParamsEntry_DoNotUse() {}
FaceParameters_IntegerParamsEntry_DoNotUse::FaceParameters_IntegerParamsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata FaceParameters_IntegerParamsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[4]);
}
// ===================================================================

FaceParameters_FloatArrayParamsEntry_DoNotUse::FaceParameters_FloatArrayParamsEntry_DoNotUse() {}
FaceParameters_FloatArrayParamsEntry_DoNotUse::FaceParameters_FloatArrayParamsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata FaceParameters_FloatArrayParamsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[5]);
}
// ===================================================================

class FaceParameters::_Internal {
 public:
};

FaceParameters::FaceParameters(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.a2f.v1.FaceParameters)
}
inline PROTOBUF_NDEBUG_INLINE FaceParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : float_params_{visibility, arena, from.float_params_},
        integer_params_{visibility, arena, from.integer_params_},
        float_array_params_{visibility, arena, from.float_array_params_},
        _cached_size_{0} {}

FaceParameters::FaceParameters(
    ::google::protobuf::Arena* arena,
    const FaceParameters& from)
    : ::google::protobuf::Message(arena) {
  FaceParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.a2f.v1.FaceParameters)
}
inline PROTOBUF_NDEBUG_INLINE FaceParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : float_params_{visibility, arena},
        integer_params_{visibility, arena},
        float_array_params_{visibility, arena},
        _cached_size_{0} {}

inline void FaceParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FaceParameters::~FaceParameters() {
  // @@protoc_insertion_point(destructor:nvidia_ace.a2f.v1.FaceParameters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FaceParameters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FaceParameters::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FaceParameters, _impl_._cached_size_),
              false,
          },
          &FaceParameters::MergeImpl,
          &FaceParameters::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FaceParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.a2f.v1.FaceParameters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.float_params_.Clear();
  _impl_.integer_params_.Clear();
  _impl_.float_array_params_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FaceParameters::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 4, 85, 2> FaceParameters::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FaceParameters_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::FaceParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, float> float_params = 1;
    {PROTOBUF_FIELD_OFFSET(FaceParameters, _impl_.float_params_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, int32> integer_params = 2;
    {PROTOBUF_FIELD_OFFSET(FaceParameters, _impl_.integer_params_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .nvidia_ace.a2f.v1.FloatArray> float_array_params = 3;
    {PROTOBUF_FIELD_OFFSET(FaceParameters, _impl_.float_array_params_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FaceParameters()._impl_.float_params_)>(
        1, 0, 0, 9,
        2)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FaceParameters()._impl_.integer_params_)>(
        1, 0, 0, 9,
        5)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FaceParameters()._impl_.float_array_params_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::nvidia_ace::a2f::v1::FloatArray>},
  }}, {{
    "\40\14\16\22\0\0\0\0"
    "nvidia_ace.a2f.v1.FaceParameters"
    "float_params"
    "integer_params"
    "float_array_params"
  }},
};

::uint8_t* FaceParameters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.a2f.v1.FaceParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, float> float_params = 1;
  if (!_internal_float_params().empty()) {
    using MapType = ::google::protobuf::Map<std::string, float>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>;
    const auto& field = _internal_float_params();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.FaceParameters.float_params");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.FaceParameters.float_params");
      }
    }
  }

  // map<string, int32> integer_params = 2;
  if (!_internal_integer_params().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = _internal_integer_params();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.FaceParameters.integer_params");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.FaceParameters.integer_params");
      }
    }
  }

  // map<string, .nvidia_ace.a2f.v1.FloatArray> float_array_params = 3;
  if (!_internal_float_array_params().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::nvidia_ace::a2f::v1::FloatArray>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::nvidia_ace::a2f::v1::FloatArray,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_float_array_params();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.FaceParameters.float_array_params");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.FaceParameters.float_array_params");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.a2f.v1.FaceParameters)
  return target;
}

::size_t FaceParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.a2f.v1.FaceParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, float> float_params = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_float_params_size());
  for (const auto& entry : _internal_float_params()) {
    total_size += _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, int32> integer_params = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_integer_params_size());
  for (const auto& entry : _internal_integer_params()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, .nvidia_ace.a2f.v1.FloatArray> float_array_params = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_float_array_params_size());
  for (const auto& entry : _internal_float_array_params()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::nvidia_ace::a2f::v1::FloatArray,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FaceParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FaceParameters*>(&to_msg);
  auto& from = static_cast<const FaceParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.a2f.v1.FaceParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.float_params_.MergeFrom(from._impl_.float_params_);
  _this->_impl_.integer_params_.MergeFrom(from._impl_.integer_params_);
  _this->_impl_.float_array_params_.MergeFrom(from._impl_.float_array_params_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FaceParameters::CopyFrom(const FaceParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.a2f.v1.FaceParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FaceParameters::IsInitialized() const {
  return true;
}

void FaceParameters::InternalSwap(FaceParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.float_params_.InternalSwap(&other->_impl_.float_params_);
  _impl_.integer_params_.InternalSwap(&other->_impl_.integer_params_);
  _impl_.float_array_params_.InternalSwap(&other->_impl_.float_array_params_);
}

::google::protobuf::Metadata FaceParameters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[6]);
}
// ===================================================================

BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse() {}
BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse::BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata BlendShapeParameters_BsWeightMultipliersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[7]);
}
// ===================================================================

BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse() {}
BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse::BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata BlendShapeParameters_BsWeightOffsetsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[8]);
}
// ===================================================================

class BlendShapeParameters::_Internal {
 public:
};

BlendShapeParameters::BlendShapeParameters(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.a2f.v1.BlendShapeParameters)
}
inline PROTOBUF_NDEBUG_INLINE BlendShapeParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bs_weight_multipliers_{visibility, arena, from.bs_weight_multipliers_},
        bs_weight_offsets_{visibility, arena, from.bs_weight_offsets_},
        _cached_size_{0} {}

BlendShapeParameters::BlendShapeParameters(
    ::google::protobuf::Arena* arena,
    const BlendShapeParameters& from)
    : ::google::protobuf::Message(arena) {
  BlendShapeParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.a2f.v1.BlendShapeParameters)
}
inline PROTOBUF_NDEBUG_INLINE BlendShapeParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bs_weight_multipliers_{visibility, arena},
        bs_weight_offsets_{visibility, arena},
        _cached_size_{0} {}

inline void BlendShapeParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlendShapeParameters::~BlendShapeParameters() {
  // @@protoc_insertion_point(destructor:nvidia_ace.a2f.v1.BlendShapeParameters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlendShapeParameters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BlendShapeParameters::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BlendShapeParameters, _impl_._cached_size_),
              false,
          },
          &BlendShapeParameters::MergeImpl,
          &BlendShapeParameters::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BlendShapeParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.a2f.v1.BlendShapeParameters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bs_weight_multipliers_.Clear();
  _impl_.bs_weight_offsets_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlendShapeParameters::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 85, 2> BlendShapeParameters::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BlendShapeParameters_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::BlendShapeParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, float> bs_weight_multipliers = 1;
    {PROTOBUF_FIELD_OFFSET(BlendShapeParameters, _impl_.bs_weight_multipliers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, float> bs_weight_offsets = 2;
    {PROTOBUF_FIELD_OFFSET(BlendShapeParameters, _impl_.bs_weight_offsets_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(BlendShapeParameters()._impl_.bs_weight_multipliers_)>(
        1, 0, 0, 9,
        2)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(BlendShapeParameters()._impl_.bs_weight_offsets_)>(
        1, 0, 0, 9,
        2)},
  }}, {{
    "\46\25\21\0\0\0\0\0"
    "nvidia_ace.a2f.v1.BlendShapeParameters"
    "bs_weight_multipliers"
    "bs_weight_offsets"
  }},
};

::uint8_t* BlendShapeParameters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.a2f.v1.BlendShapeParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, float> bs_weight_multipliers = 1;
  if (!_internal_bs_weight_multipliers().empty()) {
    using MapType = ::google::protobuf::Map<std::string, float>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>;
    const auto& field = _internal_bs_weight_multipliers();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.BlendShapeParameters.bs_weight_multipliers");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.BlendShapeParameters.bs_weight_multipliers");
      }
    }
  }

  // map<string, float> bs_weight_offsets = 2;
  if (!_internal_bs_weight_offsets().empty()) {
    using MapType = ::google::protobuf::Map<std::string, float>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>;
    const auto& field = _internal_bs_weight_offsets();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.BlendShapeParameters.bs_weight_offsets");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "nvidia_ace.a2f.v1.BlendShapeParameters.bs_weight_offsets");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.a2f.v1.BlendShapeParameters)
  return target;
}

::size_t BlendShapeParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.a2f.v1.BlendShapeParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, float> bs_weight_multipliers = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_bs_weight_multipliers_size());
  for (const auto& entry : _internal_bs_weight_multipliers()) {
    total_size += _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, float> bs_weight_offsets = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_bs_weight_offsets_size());
  for (const auto& entry : _internal_bs_weight_offsets()) {
    total_size += _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BlendShapeParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlendShapeParameters*>(&to_msg);
  auto& from = static_cast<const BlendShapeParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.a2f.v1.BlendShapeParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bs_weight_multipliers_.MergeFrom(from._impl_.bs_weight_multipliers_);
  _this->_impl_.bs_weight_offsets_.MergeFrom(from._impl_.bs_weight_offsets_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlendShapeParameters::CopyFrom(const BlendShapeParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.a2f.v1.BlendShapeParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlendShapeParameters::IsInitialized() const {
  return true;
}

void BlendShapeParameters::InternalSwap(BlendShapeParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bs_weight_multipliers_.InternalSwap(&other->_impl_.bs_weight_multipliers_);
  _impl_.bs_weight_offsets_.InternalSwap(&other->_impl_.bs_weight_offsets_);
}

::google::protobuf::Metadata BlendShapeParameters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[9]);
}
// ===================================================================

class EmotionPostProcessingParameters::_Internal {
 public:
  using HasBits = decltype(std::declval<EmotionPostProcessingParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_._has_bits_);
};

EmotionPostProcessingParameters::EmotionPostProcessingParameters(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
}
EmotionPostProcessingParameters::EmotionPostProcessingParameters(
    ::google::protobuf::Arena* arena, const EmotionPostProcessingParameters& from)
    : EmotionPostProcessingParameters(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EmotionPostProcessingParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EmotionPostProcessingParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, emotion_contrast_),
           0,
           offsetof(Impl_, max_emotions_) -
               offsetof(Impl_, emotion_contrast_) +
               sizeof(Impl_::max_emotions_));
}
EmotionPostProcessingParameters::~EmotionPostProcessingParameters() {
  // @@protoc_insertion_point(destructor:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmotionPostProcessingParameters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EmotionPostProcessingParameters::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_._cached_size_),
              false,
          },
          &EmotionPostProcessingParameters::MergeImpl,
          &EmotionPostProcessingParameters::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void EmotionPostProcessingParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.emotion_contrast_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_emotions_) -
        reinterpret_cast<char*>(&_impl_.emotion_contrast_)) + sizeof(_impl_.max_emotions_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmotionPostProcessingParameters::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> EmotionPostProcessingParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EmotionPostProcessingParameters_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::EmotionPostProcessingParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional float emotion_contrast = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.emotion_contrast_)}},
    // optional float live_blend_coef = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.live_blend_coef_)}},
    // optional bool enable_preferred_emotion = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EmotionPostProcessingParameters, _impl_.enable_preferred_emotion_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.enable_preferred_emotion_)}},
    // optional float preferred_emotion_strength = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.preferred_emotion_strength_)}},
    // optional float emotion_strength = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.emotion_strength_)}},
    // optional int32 max_emotions = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EmotionPostProcessingParameters, _impl_.max_emotions_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.max_emotions_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float emotion_contrast = 1;
    {PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.emotion_contrast_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float live_blend_coef = 2;
    {PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.live_blend_coef_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool enable_preferred_emotion = 3;
    {PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.enable_preferred_emotion_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional float preferred_emotion_strength = 4;
    {PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.preferred_emotion_strength_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float emotion_strength = 5;
    {PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.emotion_strength_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 max_emotions = 6;
    {PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.max_emotions_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EmotionPostProcessingParameters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float emotion_contrast = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_emotion_contrast(), target);
  }

  // optional float live_blend_coef = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_live_blend_coef(), target);
  }

  // optional bool enable_preferred_emotion = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enable_preferred_emotion(), target);
  }

  // optional float preferred_emotion_strength = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_preferred_emotion_strength(), target);
  }

  // optional float emotion_strength = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_emotion_strength(), target);
  }

  // optional int32 max_emotions = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_max_emotions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
  return target;
}

::size_t EmotionPostProcessingParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional float emotion_contrast = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // optional float live_blend_coef = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional bool enable_preferred_emotion = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional float preferred_emotion_strength = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional float emotion_strength = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional int32 max_emotions = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_emotions());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EmotionPostProcessingParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EmotionPostProcessingParameters*>(&to_msg);
  auto& from = static_cast<const EmotionPostProcessingParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.emotion_contrast_ = from._impl_.emotion_contrast_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.live_blend_coef_ = from._impl_.live_blend_coef_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.enable_preferred_emotion_ = from._impl_.enable_preferred_emotion_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.preferred_emotion_strength_ = from._impl_.preferred_emotion_strength_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.emotion_strength_ = from._impl_.emotion_strength_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.max_emotions_ = from._impl_.max_emotions_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmotionPostProcessingParameters::CopyFrom(const EmotionPostProcessingParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.a2f.v1.EmotionPostProcessingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmotionPostProcessingParameters::IsInitialized() const {
  return true;
}

void EmotionPostProcessingParameters::InternalSwap(EmotionPostProcessingParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.max_emotions_)
      + sizeof(EmotionPostProcessingParameters::_impl_.max_emotions_)
      - PROTOBUF_FIELD_OFFSET(EmotionPostProcessingParameters, _impl_.emotion_contrast_)>(
          reinterpret_cast<char*>(&_impl_.emotion_contrast_),
          reinterpret_cast<char*>(&other->_impl_.emotion_contrast_));
}

::google::protobuf::Metadata EmotionPostProcessingParameters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[10]);
}
// ===================================================================

class AudioWithEmotion::_Internal {
 public:
};

void AudioWithEmotion::clear_emotions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.emotions_.Clear();
}
AudioWithEmotion::AudioWithEmotion(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.a2f.v1.AudioWithEmotion)
}
inline PROTOBUF_NDEBUG_INLINE AudioWithEmotion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : emotions_{visibility, arena, from.emotions_},
        audio_buffer_(arena, from.audio_buffer_),
        _cached_size_{0} {}

AudioWithEmotion::AudioWithEmotion(
    ::google::protobuf::Arena* arena,
    const AudioWithEmotion& from)
    : ::google::protobuf::Message(arena) {
  AudioWithEmotion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.a2f.v1.AudioWithEmotion)
}
inline PROTOBUF_NDEBUG_INLINE AudioWithEmotion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : emotions_{visibility, arena},
        audio_buffer_(arena),
        _cached_size_{0} {}

inline void AudioWithEmotion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AudioWithEmotion::~AudioWithEmotion() {
  // @@protoc_insertion_point(destructor:nvidia_ace.a2f.v1.AudioWithEmotion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioWithEmotion::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.audio_buffer_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AudioWithEmotion::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AudioWithEmotion, _impl_._cached_size_),
              false,
          },
          &AudioWithEmotion::MergeImpl,
          &AudioWithEmotion::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AudioWithEmotion::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.a2f.v1.AudioWithEmotion)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emotions_.Clear();
  _impl_.audio_buffer_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioWithEmotion::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AudioWithEmotion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AudioWithEmotion_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::a2f::v1::AudioWithEmotion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode emotions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AudioWithEmotion, _impl_.emotions_)}},
    // bytes audio_buffer = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AudioWithEmotion, _impl_.audio_buffer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes audio_buffer = 1;
    {PROTOBUF_FIELD_OFFSET(AudioWithEmotion, _impl_.audio_buffer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode emotions = 2;
    {PROTOBUF_FIELD_OFFSET(AudioWithEmotion, _impl_.emotions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nvidia_ace::emotion_with_timecode::v1::EmotionWithTimeCode>()},
  }}, {{
  }},
};

::uint8_t* AudioWithEmotion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.a2f.v1.AudioWithEmotion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes audio_buffer = 1;
  if (!this->_internal_audio_buffer().empty()) {
    const std::string& _s = this->_internal_audio_buffer();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode emotions = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_emotions_size());
       i < n; i++) {
    const auto& repfield = this->_internal_emotions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.a2f.v1.AudioWithEmotion)
  return target;
}

::size_t AudioWithEmotion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.a2f.v1.AudioWithEmotion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode emotions = 2;
  total_size += 1UL * this->_internal_emotions_size();
  for (const auto& msg : this->_internal_emotions()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes audio_buffer = 1;
  if (!this->_internal_audio_buffer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_audio_buffer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AudioWithEmotion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioWithEmotion*>(&to_msg);
  auto& from = static_cast<const AudioWithEmotion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.a2f.v1.AudioWithEmotion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_emotions()->MergeFrom(
      from._internal_emotions());
  if (!from._internal_audio_buffer().empty()) {
    _this->_internal_set_audio_buffer(from._internal_audio_buffer());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioWithEmotion::CopyFrom(const AudioWithEmotion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.a2f.v1.AudioWithEmotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioWithEmotion::IsInitialized() const {
  return true;
}

void AudioWithEmotion::InternalSwap(AudioWithEmotion* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.emotions_.InternalSwap(&other->_impl_.emotions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_buffer_, &other->_impl_.audio_buffer_, arena);
}

::google::protobuf::Metadata AudioWithEmotion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2ea2f_2ev1_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace a2f
}  // namespace nvidia_ace
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_nvidia_5face_2ea2f_2ev1_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
