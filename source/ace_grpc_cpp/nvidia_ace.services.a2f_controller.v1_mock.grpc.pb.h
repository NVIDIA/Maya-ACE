// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: nvidia_ace.services.a2f_controller.v1.proto

#ifndef GRPC_MOCK_nvidia_5face_2eservices_2ea2f_5fcontroller_2ev1_2eproto__INCLUDED
#define GRPC_MOCK_nvidia_5face_2eservices_2ea2f_5fcontroller_2ev1_2eproto__INCLUDED

#include "nvidia_ace.services.a2f_controller.v1.pb.h"
#include "nvidia_ace.services.a2f_controller.v1.grpc.pb.h"

#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/sync_stream.h>
#include <gmock/gmock.h>
namespace nvidia_ace {
namespace services {
namespace a2f_controller {
namespace v1 {

class MockA2FControllerServiceStub : public A2FControllerService::StubInterface {
 public:
  MOCK_METHOD1(ProcessAudioStreamRaw, ::grpc::ClientReaderWriterInterface< ::nvidia_ace::controller::v1::AudioStream, ::nvidia_ace::controller::v1::AnimationDataStream>*(::grpc::ClientContext* context));
  MOCK_METHOD3(AsyncProcessAudioStreamRaw, ::grpc::ClientAsyncReaderWriterInterface<::nvidia_ace::controller::v1::AudioStream, ::nvidia_ace::controller::v1::AnimationDataStream>*(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD2(PrepareAsyncProcessAudioStreamRaw, ::grpc::ClientAsyncReaderWriterInterface<::nvidia_ace::controller::v1::AudioStream, ::nvidia_ace::controller::v1::AnimationDataStream>*(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq));
};

}  // namespace v1
}  // namespace a2f_controller
}  // namespace services
}  // namespace nvidia_ace


#endif  // GRPC_MOCK_nvidia_5face_2eservices_2ea2f_5fcontroller_2ev1_2eproto__INCLUDED
