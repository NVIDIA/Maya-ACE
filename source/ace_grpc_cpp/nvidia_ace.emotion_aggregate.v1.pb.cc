// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvidia_ace.emotion_aggregate.v1.proto
// Protobuf C++ Version: 5.26.0

#include "nvidia_ace.emotion_aggregate.v1.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace nvidia_ace {
namespace emotion_aggregate {
namespace v1 {

inline constexpr EmotionAggregate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : input_emotions_{},
        a2e_output_{},
        a2f_smoothed_output_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmotionAggregate::EmotionAggregate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmotionAggregateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmotionAggregateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmotionAggregateDefaultTypeInternal() {}
  union {
    EmotionAggregate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmotionAggregateDefaultTypeInternal _EmotionAggregate_default_instance_;
}  // namespace v1
}  // namespace emotion_aggregate
}  // namespace nvidia_ace
static ::_pb::Metadata file_level_metadata_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto = nullptr;
const ::uint32_t
    TableStruct_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::emotion_aggregate::v1::EmotionAggregate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::emotion_aggregate::v1::EmotionAggregate, _impl_.input_emotions_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::emotion_aggregate::v1::EmotionAggregate, _impl_.a2e_output_),
        PROTOBUF_FIELD_OFFSET(::nvidia_ace::emotion_aggregate::v1::EmotionAggregate, _impl_.a2f_smoothed_output_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::nvidia_ace::emotion_aggregate::v1::EmotionAggregate)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::nvidia_ace::emotion_aggregate::v1::_EmotionAggregate_default_instance_._instance,
};
const char descriptor_table_protodef_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%nvidia_ace.emotion_aggregate.v1.proto\022"
    "\037nvidia_ace.emotion_aggregate.v1\032)nvidia"
    "_ace.emotion_with_timecode.v1.proto\"\211\002\n\020"
    "EmotionAggregate\022P\n\016input_emotions\030\001 \003(\013"
    "28.nvidia_ace.emotion_with_timecode.v1.E"
    "motionWithTimeCode\022L\n\na2e_output\030\002 \003(\01328"
    ".nvidia_ace.emotion_with_timecode.v1.Emo"
    "tionWithTimeCode\022U\n\023a2f_smoothed_output\030"
    "\003 \003(\01328.nvidia_ace.emotion_with_timecode"
    ".v1.EmotionWithTimeCodeb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto_deps[1] =
    {
        &::descriptor_table_nvidia_5face_2eemotion_5fwith_5ftimecode_2ev1_2eproto,
};
static ::absl::once_flag descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto = {
    false,
    false,
    391,
    descriptor_table_protodef_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto,
    "nvidia_ace.emotion_aggregate.v1.proto",
    &descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto_once,
    descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto::offsets,
    file_level_metadata_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto,
    file_level_enum_descriptors_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto,
    file_level_service_descriptors_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto_getter() {
  return &descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto;
}
namespace nvidia_ace {
namespace emotion_aggregate {
namespace v1 {
// ===================================================================

class EmotionAggregate::_Internal {
 public:
};

void EmotionAggregate::clear_input_emotions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.input_emotions_.Clear();
}
void EmotionAggregate::clear_a2e_output() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.a2e_output_.Clear();
}
void EmotionAggregate::clear_a2f_smoothed_output() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.a2f_smoothed_output_.Clear();
}
EmotionAggregate::EmotionAggregate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
}
inline PROTOBUF_NDEBUG_INLINE EmotionAggregate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : input_emotions_{visibility, arena, from.input_emotions_},
        a2e_output_{visibility, arena, from.a2e_output_},
        a2f_smoothed_output_{visibility, arena, from.a2f_smoothed_output_},
        _cached_size_{0} {}

EmotionAggregate::EmotionAggregate(
    ::google::protobuf::Arena* arena,
    const EmotionAggregate& from)
    : ::google::protobuf::Message(arena) {
  EmotionAggregate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
}
inline PROTOBUF_NDEBUG_INLINE EmotionAggregate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : input_emotions_{visibility, arena},
        a2e_output_{visibility, arena},
        a2f_smoothed_output_{visibility, arena},
        _cached_size_{0} {}

inline void EmotionAggregate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EmotionAggregate::~EmotionAggregate() {
  // @@protoc_insertion_point(destructor:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmotionAggregate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EmotionAggregate::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(EmotionAggregate, _impl_._cached_size_),
              false,
          },
          &EmotionAggregate::MergeImpl,
          &EmotionAggregate::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void EmotionAggregate::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_emotions_.Clear();
  _impl_.a2e_output_.Clear();
  _impl_.a2f_smoothed_output_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmotionAggregate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> EmotionAggregate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EmotionAggregate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nvidia_ace::emotion_aggregate::v1::EmotionAggregate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode input_emotions = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EmotionAggregate, _impl_.input_emotions_)}},
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2e_output = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(EmotionAggregate, _impl_.a2e_output_)}},
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2f_smoothed_output = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(EmotionAggregate, _impl_.a2f_smoothed_output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode input_emotions = 1;
    {PROTOBUF_FIELD_OFFSET(EmotionAggregate, _impl_.input_emotions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2e_output = 2;
    {PROTOBUF_FIELD_OFFSET(EmotionAggregate, _impl_.a2e_output_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2f_smoothed_output = 3;
    {PROTOBUF_FIELD_OFFSET(EmotionAggregate, _impl_.a2f_smoothed_output_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nvidia_ace::emotion_with_timecode::v1::EmotionWithTimeCode>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::emotion_with_timecode::v1::EmotionWithTimeCode>()},
    {::_pbi::TcParser::GetTable<::nvidia_ace::emotion_with_timecode::v1::EmotionWithTimeCode>()},
  }}, {{
  }},
};

::uint8_t* EmotionAggregate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode input_emotions = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_input_emotions_size());
       i < n; i++) {
    const auto& repfield = this->_internal_input_emotions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2e_output = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_a2e_output_size());
       i < n; i++) {
    const auto& repfield = this->_internal_a2e_output().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2f_smoothed_output = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_a2f_smoothed_output_size());
       i < n; i++) {
    const auto& repfield = this->_internal_a2f_smoothed_output().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
  return target;
}

::size_t EmotionAggregate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode input_emotions = 1;
  total_size += 1UL * this->_internal_input_emotions_size();
  for (const auto& msg : this->_internal_input_emotions()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2e_output = 2;
  total_size += 1UL * this->_internal_a2e_output_size();
  for (const auto& msg : this->_internal_a2e_output()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .nvidia_ace.emotion_with_timecode.v1.EmotionWithTimeCode a2f_smoothed_output = 3;
  total_size += 1UL * this->_internal_a2f_smoothed_output_size();
  for (const auto& msg : this->_internal_a2f_smoothed_output()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EmotionAggregate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EmotionAggregate*>(&to_msg);
  auto& from = static_cast<const EmotionAggregate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_emotions()->MergeFrom(
      from._internal_input_emotions());
  _this->_internal_mutable_a2e_output()->MergeFrom(
      from._internal_a2e_output());
  _this->_internal_mutable_a2f_smoothed_output()->MergeFrom(
      from._internal_a2f_smoothed_output());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmotionAggregate::CopyFrom(const EmotionAggregate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.emotion_aggregate.v1.EmotionAggregate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmotionAggregate::IsInitialized() const {
  return true;
}

void EmotionAggregate::InternalSwap(EmotionAggregate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.input_emotions_.InternalSwap(&other->_impl_.input_emotions_);
  _impl_.a2e_output_.InternalSwap(&other->_impl_.a2e_output_);
  _impl_.a2f_smoothed_output_.InternalSwap(&other->_impl_.a2f_smoothed_output_);
}

::google::protobuf::Metadata EmotionAggregate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto_getter,
                                   &descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto_once,
                                   file_level_metadata_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace emotion_aggregate
}  // namespace nvidia_ace
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_nvidia_5face_2eemotion_5faggregate_2ev1_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
